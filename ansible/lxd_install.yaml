- name: "Prepare nodes for development"
  hosts: workers
  tasks:

  - name: Install lxd
    register: result
    community.general.snap:
      name: lxd
      classic: true
  
  - name: Init lxd
    shell: lxd init --storage-backend=dir --auto
    when: result.changed
  
  - name: Create bridged profile
    community.general.lxd_profile:
      name: microk8s
      state: present
      config:
        boot.autostart: "true"
        linux.kernel_modules: ip_vs,ip_vs_rr,ip_vs_wrr,ip_vs_sh,ip_tables,ip6_tables,netlink_diag,nf_nat,overlay,br_netfilter
        raw.lxc: |
          lxc.apparmor.profile=unconfined
          lxc.mount.auto=proc:rw sys:rw cgroup:rw
          lxc.cgroup.devices.allow=a
          lxc.cap.drop=
        security.nesting: "true"
        security.privileged: "true"
      description: ""
      devices:
        eth0:
          name: eth0
          nictype: bridged
          parent: br0
          type: nic
        aadisable:
          path: /sys/module/nf_conntrack/parameters/hashsize
          source: /sys/module/nf_conntrack/parameters/hashsize
          type: disk
        aadisable1:
          path: /sys/module/apparmor/parameters/enabled
          source: /dev/null
          type: disk
        aadisable2:
          path: /dev/kmsg
          source: /dev/kmsg
          type: disk
        aadisable3:
          path: /sys/fs/bpf
          source: /sys/fs/bpf
          type: disk
  
  - name: Create a started container
    community.general.lxd_container:
      name: "{{ item }}"
      state: started
      source:
        type: image
        mode: pull
        #server: https://images.linuxcontainers.org
        server: https://cloud-images.ubuntu.com/releases
        #protocol: lxd # if you get a 404, try setting protocol: simplestreams
        protocol: simplestreams
        #alias: ubuntu/bionic/amd64
        alias: "20.04"
      profiles: ["default","microk8s"]
      #config: 
      #  volatile.eth0.hwaddr: 82:88:30:30:56:d4
      wait_for_ipv4_addresses: true
      timeout: 600
    with_items: "{{ LXD_CONTAINERS[inventory_hostname] }}"

  - name: copy authorised keys
    shell: lxc file push /root/.ssh/authorized_keys {{ item }}/root/.ssh/authorized_keys
    with_items: "{{ LXD_CONTAINERS[inventory_hostname] }}"