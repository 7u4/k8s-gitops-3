# ------------------- Ingress ------------------- #

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: heketi
  namespace: kube-system
  annotations:
    ingress.kubernetes.io/whitelist-source-range: "192.168.2.0/16"
spec:
  rules:
  - host: heketi-api.home.angelnu.com
    http:
      paths:
      - path: /
        backend:
          serviceName: heketi
          servicePort: heketi
---
kind: Service
apiVersion: v1
metadata:
  name: heketi
  namespace: kube-system
  labels:
    glusterfs: heketi-service
    heketi: service
  annotations:
    description: Exposes Heketi Service
spec:
  selector:
    glusterfs: heketi-pod
  ports:
  - name: heketi
    port: 8080
    targetPort: 8080
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: heketi
  namespace: kube-system
  labels:
    glusterfs: heketi-deployment
    heketi: deployment
  annotations:
    description: Defines how to deploy Heketi
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      glusterfs: heketi-pod
      heketi: pod
  template:
    metadata:
      name: heketi
      labels:
        glusterfs: heketi-pod
        heketi: pod
    spec:
      serviceAccountName: heketi-service-account
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - image: heketi/heketi:dev
        imagePullPolicy: Always
        name: heketi
        env:
        - name: HEKETI_EXECUTOR
          value: "kubernetes"
        - name: HEKETI_FSTAB
          value: "/var/lib/heketi/fstab"
        - name: HEKETI_SNAPSHOT_LIMIT
          value: '14'
        - name: HEKETI_KUBE_GLUSTER_DAEMONSET
          value: "y"
        - name: HEKETI_IGNORE_STALE_OPERATIONS
          value: "true"
        - name: HEKETI_GLUSTERAPP_LOGLEVEL
          value: "debug"

        - name: HEKETI_CLI_USER
          valueFrom:
            secretKeyRef:
              name: heketi-admin-secret
              key: user
        - name: HEKETI_CLI_KEY
          valueFrom:
            secretKeyRef:
              name: heketi-admin-secret
              key: key

        - name: HEKETI_USER_KEY
          valueFrom:
            secretKeyRef:
              name: heketi-admin-secret
              key: key
        - name: HEKETI_ADMIN_KEY
          valueFrom:
            secretKeyRef:
              name: heketi-admin-secret
              key: key
        # initial topology.json in case the db does not exist
        - name: HEKETI_TOPOLOGY_FILE
          value: "/etc/heketi/topology/all.json"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: db
          mountPath: "/var/lib/heketi"
        - name: initial-topology
          mountPath: /etc/heketi/topology
        readinessProbe:
          timeoutSeconds: 3
          initialDelaySeconds: 3
          httpGet:
            path: "/hello"
            port: 8080
        livenessProbe:
          timeoutSeconds: 3
          initialDelaySeconds: 30
          httpGet:
            path: "/hello"
            port: 8080
      volumes:
      - name: db
        glusterfs:
          endpoints: heketi-storage-endpoints
          path: heketidbstorage
      - name: initial-topology
        configMap:
          name: heketi-config-secret
