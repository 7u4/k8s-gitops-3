#### POD config (run one time)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubuntu-vnc
  labels:
    application: ubuntu-vnc
spec:
  # 1 Pods should exist at all times.
  replicas: 1
  selector:
    matchLabels:
      application: ubuntu-vnc
  template:
    metadata:
      labels:
        application: ubuntu-vnc
    spec:
      terminationGracePeriodSeconds: 5
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: ubuntu-vnc
        image: dorowu/ubuntu-desktop-lxde-vnc
        imagePullPolicy: Always
        args:
          ### make normal UI startup to connect via: oc rsh <pod-name> bash
          #- '--tail-log'
        ### checks that vnc server is up and running
        livenessProbe:
          tcpSocket:
            port: 5900
          initialDelaySeconds: 1
          timeoutSeconds: 1
        ### checks if http-vnc connection is working
        readinessProbe:
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 1
          timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    application: ubuntu-vnc
  name: ubuntu-vnc
spec:
  externalName: ubuntu-vnc
  ports:
  - name: http-port-tcp
    protocol: TCP
    port: 80
  - name: vnc-port-tcp
    protocol: TCP
    port: 5900
  selector:
    application: ubuntu-vnc
  type: NodePort
# Use type loadbalancer if needed
#  type: LoadBalancer
---
# ------------------- Ingress ------------------- #

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dosbox
spec:
  tls:
  - hosts:
    - ubuntu.pub.${CLUSTER_DOMAIN}
  rules:
  - host: ubuntu.pub.${CLUSTER_DOMAIN}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ubuntu-vnc
            port:
              name: http-port-tcp